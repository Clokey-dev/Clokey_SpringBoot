plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.clokey'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

spotless {
	java {
		importOrder(
				'org.springframework',
				'java|javax|jakarta',
				'lombok',
				'',
				'org.junit|org.mockito',
				'\\#',
				'\\#org.junit'
		)

		googleJavaFormat('1.17.0').aosp()

		formatAnnotations()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc' // jdbc 의존성 추가
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final' // Hibernate Validator 라이브러리 추가
	implementation 'jakarta.validation:jakarta.validation-api:3.0.0' // Hibernate Validator 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.mysql:mysql-connector-j'
	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리 라이브러리

	implementation 'org.bouncycastle:bcpkix-jdk18on:1.72'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.nimbusds:nimbus-jose-jwt:9.31'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	//elastic search
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch' // elastic search 의존성 추가
	implementation 'co.elastic.clients:elasticsearch-java:8.15.5' // spring core 버전에 따른 ES 버전
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'

	//notification - firebase
	implementation 'com.google.firebase:firebase-admin:9.1.1'

	//monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.processResources {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE // 또는 DuplicatesStrategy.INCLUDE
}

