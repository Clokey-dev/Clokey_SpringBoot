name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_URL: ${{ secrets.DB_URL }}
      REST_API_KEY: ${{ secrets.REST_API_KEY }}
      TAG: develop-latest  # TAG 설정

    steps:
      - uses: actions/checkout@v4

      - name: Debug Environment Variables
        run: |
          echo "DB_USERNAME: ${{ secrets.DB_USERNAME }}"
          echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}"
          echo "DB_URL: ${{ secrets.DB_URL }}"
          echo "REST_API_KEY: ${{ secrets.REST_API_KEY }}"
          echo "TAG: ${{ env.TAG }}"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: |
          ./gradlew --stop && ./gradlew clean --refresh-dependencies
          ./gradlew clean build
          ls -l build/libs

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cicdsample
          path: ./build/libs/*.jar

      - name: Create .env file for EC2
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "REST_API_KEY=${{ secrets.REST_API_KEY }}" >> .env
          cat .env  # 확인용 출력 (배포 후 삭제 필요)

      - name: Copy .env and jar file to remote
        uses: appleboy/scp-action@v0.1.3
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            ./build/libs/*.jar
            .env
          target: "/home/ubuntu/cicd"

      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 환경 변수 확인
            echo "DB_USERNAME: $(cat /home/ubuntu/cicd/.env | grep DB_USERNAME | cut -d '=' -f2)"
            echo "DB_PASSWORD: $(cat /home/ubuntu/cicd/.env | grep DB_PASSWORD | cut -d '=' -f2)"
            echo "DB_URL: $(cat /home/ubuntu/cicd/.env | grep DB_URL | cut -d '=' -f2)"
            echo "REST_API_KEY: $(cat /home/ubuntu/cicd/.env | grep REST_API_KEY | cut -d '=' -f2)"
            
            # Docker Compose 실행
            cd /home/ubuntu/cicd
            docker-compose --env-file .env up -d
